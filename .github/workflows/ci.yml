name:                     CI
on:                       [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        name:             [mac, ubuntu-mpich, ubuntu-standard, ubuntu-debug,
                           ubuntu-nogather, mac-thread-cap]
        include:
          - name:         ubuntu-standard
            os:           ubuntu-latest
            testos:       LINUX
            maketest:     "ctest"
            testexamples: 1
            debug:        0
            noalligather: 0
            mpich:        0
            numthread:    1
            elsi:         0
          - name:         ubuntu-debug
            os:           ubuntu-latest
            testos:       LINUX
            maketest:     "ctest -R Regression111"
            testexamples: 1
            debug:        1
            noalligather: 0
            mpich:        0
            numthread:    1
            elsi:         0
          - name:         ubuntu-nogather
            os:           ubuntu-latest
            testos:       LINUX
            maketest:     "ctest"
            testexamples: 1
            debug:        0
            noalligather: 1
            mpich:        0
            numthread:    1
            elsi:         0
          - name:         ubuntu-mpich
            os:           ubuntu-latest
            testos:       LINUX
            maketest:     "ctest -R Regression211"
            testexamples: 0
            debug:        0
            noalligather: 0
            mpich:        1
            numthread:    3
            elsi:         0
          - name:         mac-thread-cap
            os:           macos-latest
            testos:       OSX
            maketest:     "ctest -R Regression111"
            testexamples: 0
            debug:        0
            noalligather: 0
            mpich:        0
            numthread:    3
            elsi:         0
          - name:         mac
            os:           macos-latest
            testos:       OSX
            maketest:     "ctest -R Regression111"
            testexamples: 0
            debug:        0
            noalligather: 0
            mpich:        0
            lint:         1
            numthread:    3
            elsi:         1
    runs-on:              ${{ matrix.os }}
    steps:
    - uses:               actions/checkout@v1
    - uses:               conda-incubator/setup-miniconda@v2
    - name:               setup environment
      run:                bash -l UnitTests/before_install.sh
      env:
        TESTOS:           ${{ matrix.testos }}
        MPICH:            ${{ matrix.mpich }}
    - name:               build ntpoly
      run:                |
        bash -l UnitTests/run_cmake.sh
      env:
        TESTOS:           ${{ matrix.testos }}
        DEBUG:            ${{ matrix.debug }}
        NOALLIGATHER:     ${{ matrix.noalligather }}
    - name:               regression tests
      run:                |
        bash -l UnitTests/run_ci_test.sh
      env:
        MAKETEST:         ${{ matrix.maketest }}
        TESTOS:           ${{ matrix.testos }}
        OMP_NUM_THREADS:  ${{ matrix.numthread }}
    - name:               check examples
      run:                |
        bash -l UnitTests/check_examples.sh
      env:
        TESTEXAMPLES:     ${{ matrix.testexamples }}
        TESTOS:           ${{ matrix.testos }}
    - name:               lint
      if:                 ${{ matrix.lint }}
      run:                |
        bash -l UnitTests/lint.sh
      env:
        TESTOS:           ${{ matrix.testos }}
    - name:               elsi
      if:                 ${{ matrix.elsi }}
      run:
        python UnitTests/generate_elsi.py
    - name: upload artifacts
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: Build
    - name: upload elsi
      if:                 ${{ matrix.elsi }}
      uses: actions/upload-artifact@v1
      with:
        name: elsi
        path: ElsiBuild/elsi_output
